{
  "name": "12dc4dea-6097-4a18-b24e-a9a3e00dd456",
  "type": "Microsoft.Authorization/policyDefinitions",
  "properties": {
    "displayName": "Deny-resource-without-tag",
    "description": "need to add description",
    "metadata": {
      "version": "1.0.0",
      "category": "Tags"
    },
    "mode": "Indexed",
    "parameters": {
      "environment": {
        "type": "String",
        "metadata": {
          "displayName": "environment tag",
          "description": "Name of the tag to enforce"
        }
      },
      "business-unit": {
        "type": "String",
        "metadata": {
          "displayName": "project tag",
          "description": "Name of the tag to enforce"
        }
      },
      "owner": {
        "type": "String",
        "metadata": {
          "displayName": "owner tag",
          "description": "Name of the tag to enforce"
        }
      },
      "createdBy": {
        "type": "String",
        "metadata": {
          "displayName": "createdBy tag",
          "description": "Name of the tag to enforce"
        }
      },
      "business-criticality": {
        "type": "String",
        "metadata": {
          "displayName": "Business Criticality tag",
          "description": "Name of the tag to enforce"
        }
      },
      "Department": {
        "type": "String",
        "metadata": {
          "displayName": "Department tag",
          "description": "Name of the tag to enforce"
        }
      },
      "effect": {
        "type": "String",
        "metadata": {
          "displayName": "Effect",
          "description": "Deny, Audit or Disabled the execution of the Policy"
        },
        "allowedValues": [
          "Deny",
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit"
      }
    },
    "policyRule": {
      "if":
      {
      "allOf": [
        {
          "anyOf": [
            {
              "field": "[concat('tags[', parameters('environment'), ']')]",
              "exists": "false"
            },
            {
              "field": "[concat('tags[', parameters('business-unit'), ']')]",
              "exists": "false"
            },
            {
              "field": "[concat('tags[', parameters('owner'), ']')]",
              "exists": "false"
            },
            {
              "field": "[concat('tags[', parameters('createdBy'), ']')]",
              "exists": "false"
            },
            {
              "field": "[concat('tags[', parameters('business-criticality'), ']')]",
              "exists": "false"
            },
            {
              "field": "[concat('tags[', parameters('Department'), ']')]",
              "exists": "false"
            }
          ]
        },
        {
          "not": {
            "field": "tags['aksEngineVersion']",
            "exists": "true"
          }
        },
        {
          "not": {
            "value": "[resourceGroup().name]",
            "like": "mc_*"
          }
        },
        {
          "not": {
            "value": "[resourceGroup().name]",
            "like": "NetworkWatcherRG*"
          }
        },
        {
          "count": {
            "value": [
              "aks-agentpool-*-routetable",
              "k8s-master-*-routetable",
              "ASRSeed*"
            ],
            "name": "likePattern",
            "where": {
              "field": "name",
              "like": "[current('likePattern')]"
            }
          },
          "equals": 0
        },
        {
          "field": "type",
          "notIn": [
            "Microsoft.AAD/domainServices",
            "microsoft.alertsmanagement/actionrules",
            "microsoft.alertsManagement/smartDetectorAlertRules",
            "Microsoft.Automation/automationAccounts/configurations",
            "Microsoft.Compute/restorePointCollections",
            "Microsoft.Compute/virtualMachines/extensions",
            "Microsoft.Compute/virtualMachineScaleSets/extensions",
            "Microsoft.DevTestLab/schedules",
            "Microsoft.insights/actiongroups",
            "microsoft.insights/activityLogAlerts",
            "microsoft.insights/metricalerts",
            "microsoft.insights/scheduledqueryrules",
            "Microsoft.Migrate/assessmentProjects",
            "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
            "microsoft.network/networkintentpolicies",
            "Microsoft.Network/networkWatchers/connectionMonitors",
            "Microsoft.Network/networkWatchers/flowLogs",
            "Microsoft.OffAzure/VMwareSites",
            "Microsoft.OperationsManagement/solutions",
            "Microsoft.StorageSync/storageSyncServices",
            "Microsoft.StreamAnalytics/streamingjobs",
            "Microsoft.Web/certificates"
          ]
        }
      ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    }
  }
}